plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {

	// log4j2를 사용하기 위한 기존 Slf4j 모듈인 logback 제거
	all{
		exclude module: 'spring-boot-starter-logging'
	}

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Mapstruct
	implementation 'org.mapstruct:mapstruct:1.6.2'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'

	// MySQL
	implementation 'mysql:mysql-connector-java:8.0.28'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'


	// Slack WebHook
	implementation 'com.slack.api:slack-api-client:1.28.0'
	implementation 'com.google.code.gson:gson:2.10.1'
	implementation 'com.squareup.okhttp3:okhttp:4.10.0'
	implementation 'com.slack.api:slack-app-backend:1.28.0'
	implementation 'com.slack.api:slack-api-model:1.28.0'

	//Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	//Bouncy Castle for RsaCertificate
	implementation 'org.bouncycastle:bcprov-jdk18on:1.78.1'
	implementation 'org.bouncycastle:bcpkix-jdk18on:1.78.1'

	// log4j2
	implementation 'org.springframework.boot:spring-boot-starter-log4j2:3.3.5'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.1'

	// jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// Redis
	implementation 'org.springframework.data:spring-data-redis:3.3.5'
	implementation 'io.lettuce:lettuce-core:6.5.0.RELEASE'

}



tasks.named('test') {
	useJUnitPlatform()
}

task cleanGenerated(type: Delete) {
	delete 'generated'
}

task run(dependsOn: cleanGenerated) {
	doFirst {
		// 프로그램 실행 전에 'generated' 폴더를 삭제
		cleanGenerated.execute()
	}
}
